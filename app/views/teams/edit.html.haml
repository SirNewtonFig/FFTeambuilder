#edit-character.font-mono.group.w-full.relative.mb-3
  .z-10.sticky.top-0{ class: 'bg-black/75' }
    .relative.px-3.flex.py-2.items-center.justify-between
      .flex.space-x-4
        .mb-1
          = form_for(@team, method: :patch, data: { controller: 'form' }) do |f|
            %div
              = f.label(:name, 'Team Name', class: 'text-[0.625rem] block text-white')
              = f.text_field :name, placeholder: 'Hokuten', class: "text-white text-sm #{text_field_classes_neutral}", data: { action: 'change->form#submit' }

        .mb-1
          = form_for(@team, method: :patch, data: { controller: 'form' }) do |f|
            %div
              = f.label(:player_name, 'Player Name', class: 'text-[0.625rem] block text-white')
              = f.text_field :player_name, placeholder: 'Ramza Beoulve', class: "text-white text-sm #{text_field_classes_neutral}", data: { action: 'change->form#submit' }

      .relative.flex.flex-col.items-end.group{ data: { controller: 'context', action: 'keydown.esc@window->context#close', context: { placement_value: 'bottom' } } }
        %button.flex.items-center.justify-center.text-white.hover:bg-gray-700.focus:bg-gray-700.rounded-lg.w-10.h-10.focus:ring-4.focus:ring-blue-300.focus:outline-none.cursor-pointer{"aria-controls" => "file-actions", "aria-expanded" => "false", type: "button", data: { action: 'click->context#open' } }
          %svg.w-6.h-6{fill: "none", stroke: "currentColor", "stroke-width" => "1.5", viewbox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg"}
            %path{d: "M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5", "stroke-linecap" => "round", "stroke-linejoin" => "round"}

        #file-actions.pt-2.flex.flex-col.items-end.hidden.space-y-2{ data: { context_target: 'tooltip' } }
          = link_to(export_team_path, class: 'flex items-center group cursor-pointer', data: { action: 'context#close' }) do
            .px-4.h-10.flex.justify-center.items-center.text-white.bg-gray-700.rounded-full.shadow-sm.hover:bg-gray-600.focus:ring-4.focus:ring-gray-300.focus:outline-none{ for: 'upload-team' }
              .mr-2.text-sm Download
              = inline_svg_tag('icons/download.svg', class: 'h-5 w-5 text-white')

          = form_with(url: team_memgen_path(team_id: @team.id), method: :post, multipart: true, data: { turbo: false, controller: 'form' }) do
            %label.cursor-pointer{ for: 'upload-teams' }
              .px-4.h-10.flex.justify-center.items-center.text-white.bg-gray-700.rounded-full.shadow-sm.hover:bg-gray-600.focus:ring-4.focus:ring-gray-300.focus:outline-none{ for: 'upload-team' }
                .mr-2.text-sm Lab Team
                = inline_svg_tag('icons/swords.svg', class: 'h-5 w-5 text-white')
              = file_field_tag(:team_files, name: 'team_files[]', id: 'upload-teams', class: 'hidden', accept: '.yml', multiple: true, data: { action: 'form#submit context#close' } )

          = link_to(team_path(@team), class: 'flex items-center group', data: { action: 'context#close', turbo_method: :delete, turbo_confirm: 'Are you sure you want to delete this team?' }) do
            .px-4.h-10.flex.justify-center.items-center.text-white.bg-gray-700.rounded-full.shadow-sm.hover:bg-gray-600.focus:ring-4.focus:ring-gray-300.focus:outline-none{ for: 'upload-team' }
              .mr-2.text-sm Delete
              = inline_svg_tag('icons/delete.svg', class: 'h-5 w-5 text-white')

  .relative
    .flex.mt-1
      .relative
        .fixed.flex.flex-col.fixed.top-0{ class: 'top-[3.75rem] h-[calc(100vh-72px)]', data: { lineup_target: 'container' } }
          = render 'teams/summary', team: @team

          = turbo_frame_tag(:lineup) do
            = form_with(url: team_lineup_path(team_id: @team), method: :patch, data: { controller: 'form lineup', lineup_target: 'form', turbo_frame: :lineup}) do
              %input{ id: 'lineup_index', type: 'hidden', name: 'index', value: 0, data: { lineup_target: 'index' } }
              - 4.times do |i|
                .draggable{ data: { team: @team.id, index: i, action: 'click->lineup#select:stop', lineup_target: 'character' }}
                  = render 'teams/characters/summary', selected: i == params[:id].to_i, char: @team.characters[i], i: i

          .mt-4.px-3.text-gray-400.hidden.sm:block.text-sm Team Colors
          #colors.flex.sm:flex-col.sm:px-1.mt-3.sm:mt-0
            = render 'teams/colors', team: @team

          = render 'teams/calculate_toggle', target: '#edit-character'

          #help-toggle.mt-4.ml-1
            %label.cursor-pointer.flex.items-center
              %input.hidden.peer{ type: 'checkbox', data: { controller: 'toggle-class', action: 'toggle-class#toggle context:help@window->toggle-class#off', toggle_class_class_value: 'tooltip-highlight', toggle_class_target_value: '#edit-character' } }
              = inline_svg_tag('icons/info.svg', class: 'h-12 w-12 md:h-6 md:w-6 text-gray-400 peer-checked:text-blue-500 font-light')
              .hidden.md:block.text-white.text-sm.ml-1 Need More Info?

      .w-full.mr-3{ class: 'ml-[4.5rem] sm:ml-[13.75rem]' }
        = turbo_frame_tag(:character_editor, src: edit_team_character_path(team_id: @team.id, id: 0))

#overlay.hidden.fixed.w-full.h-full.top-0.left-0.right-0.z-10.bg-gray-700.opacity-70

= render 'users/menu', back_path: request.referer || dashboard_path
